{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Portafolio Ibero","text":"<p>Bienvenido  Esta es mi Portafolio para cursos y proyectos a lo largo de mi Carrera.</p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/","title":"Pr\u00e1cticas \u2013 Control de Motores DC con ESP32 y Puente H","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#practica-1-control-de-direccion-de-un-motor-dc-con-esp32-y-puente-h","title":"Pr\u00e1ctica 1 \u2013 Control de direcci\u00f3n de un motor DC con ESP32 y puente H","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#1-resumen","title":"1) Resumen","text":"<p>Nombre del proyecto: Control de Direcci\u00f3n de Motor DC  </p> <p>Equipo / Autor(es):  Jos\u00e9 Ismael Guerrero Rom\u00e1n y Gerardo Esquivel De Luna </p> <p>Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica </p> <p>Fecha:   03/oct/25</p> <p>Descripci\u00f3n breve: Se control\u00f3 un motor de corriente directa (DC) mediante un ESP32 y un puente H (L298N), alternando su sentido de giro hacia adelante y hacia atr\u00e1s, con pausas de detenci\u00f3n entre cada cambio.</p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#2-objetivos","title":"2) Objetivos","text":"<p>General: Controlar la direcci\u00f3n de rotaci\u00f3n de un motor DC mediante el uso de un puente H controlado por el ESP32.  </p> <p>Espec\u00edficos: - OE1: Configurar los pines del ESP32 como salidas digitales. - OE2: Programar el control de sentido (adelante/atr\u00e1s). - OE3: Implementar pausas de parada entre los cambios de direcci\u00f3n.  </p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye: - Control de direcci\u00f3n de un solo motor DC. - Implementaci\u00f3n con puente H L298N. - Alimentaci\u00f3n de 6 V para el motor.  </p> <p>No incluye: - Control de velocidad (PWM). - Sensores o control autom\u00e1tico. - Comunicaci\u00f3n con otros dispositivos.  </p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#4-requisitos","title":"4) Requisitos","text":"<p>Software: - Arduino IDE 2.x o superior. - Librer\u00eda ESP32 (instalada desde el Gestor de Placas).  </p> <p>Hardware: - ESP32 DevKit. - Puente H L298N. - Motor DC de 6 V. - Fuente externa de 6 V. - Cables Dupont / protoboard.  </p> <p>Conocimientos previos: - Programaci\u00f3n b\u00e1sica en Arduino. - Manejo de se\u00f1ales digitales. - Conceptos de puente H.  </p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#5-codigo","title":"5) C\u00f3digo","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#define-in1-27-define-in2-14-void-setup-declarar-pines-como-salida-pinmodein1-output-pinmodein2-output-void-loop-adelante-digitalwritein1-low-digitalwritein2-high-delay1000-alto-digitalwritein1-low-digitalwritein2-low-delay1000-atras-digitalwritein1-high-digitalwritein2-low-delay1000-alto-digitalwritein1-low-digitalwritein2-low-delay1000","title":"<pre><code>#define in1 27\n#define in2 14\n\nvoid setup() {\n  /* Declarar pines como salida */\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n}\n\nvoid loop() {\n  /* ADELANTE */\n  digitalWrite(in1, LOW);\n  digitalWrite(in2, HIGH);\n  delay(1000);\n\n  /* ALTO */\n  digitalWrite(in1, LOW);\n  digitalWrite(in2, LOW);\n  delay(1000);\n\n  /* ATR\u00c1S */\n  digitalWrite(in1, HIGH);\n  digitalWrite(in2, LOW);\n  delay(1000);\n\n  /* ALTO */\n  digitalWrite(in1, LOW);\n  digitalWrite(in2, LOW);\n  delay(1000);\n}\n</code></pre>","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#videos","title":"videos","text":"Tu navegador no soporta la reproducci\u00f3n de video."},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#practica-2-control-de-potencia-de-un-motor-dc-con-esp32-y-pwm","title":"Pr\u00e1ctica 2 \u2013 Control de potencia de un motor DC con ESP32 y PWM","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#1-resumen_1","title":"1) Resumen","text":"<p>Nombre del proyecto: Control de Potencia de Motor DC Equipo / Autor(es): Jos\u00e9 Ismael Guerrero Rom\u00e1n y Gerardo Esquivel De Luna Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica Fecha: 10/oct/25 Descripci\u00f3n breve: Se utiliz\u00f3 un ESP32 y un puente H (L298N) alimentado a 6 V para controlar la velocidad de un motor DC mediante modulaci\u00f3n por ancho de pulso (PWM), variando progresivamente su potencia desde el valor m\u00e1ximo hasta el m\u00ednimo.</p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#2-objetivos_1","title":"2) Objetivos","text":"<p>General: Regular la velocidad de un motor DC utilizando se\u00f1ales PWM generadas por el ESP32.  </p> <p>Espec\u00edficos: - OE1: Configurar un canal PWM en el ESP32 con la frecuencia y resoluci\u00f3n adecuadas. - OE2: Implementar un programa que incremente y luego disminuya la velocidad del motor. - OE3: Observar y analizar la respuesta del motor ante los diferentes niveles de potencia.  </p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#3-alcance-y-exclusiones_1","title":"3) Alcance y Exclusiones","text":"<p>Incluye: - Control de velocidad mediante modulaci\u00f3n PWM. - Configuraci\u00f3n y uso del puente H con alimentaci\u00f3n de 6 V. - Conexi\u00f3n entre el ESP32, el puente H y el motor DC.  </p> <p>No incluye: - Cambio de direcci\u00f3n del motor. - Lectura de sensores de velocidad o retroalimentaci\u00f3n. - Control remoto o comunicaci\u00f3n inal\u00e1mbrica.  </p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#4-requisitos_1","title":"4) Requisitos","text":"<p>Software: - Arduino IDE 2.x o superior. - Librer\u00eda del ESP32 instalada desde el Gestor de Placas.  </p> <p>Hardware: - ESP32 DevKit. - Puente H L298N. - Motor DC de 6 V. - Fuente externa de 6 V. - Protoboard y cables Dupont.  </p> <p>Conocimientos previos: - Programaci\u00f3n b\u00e1sica en Arduino y ESP32. - Conceptos de modulaci\u00f3n por ancho de pulso (PWM). - Electr\u00f3nica b\u00e1sica y conexiones con puente H.  </p>"},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#5-codigo_1","title":"5) C\u00f3digo","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#define-in1-27-define-in2-14-define-pwm_pin-12-configuracion-del-canal-pwm-define-pwm_channel-0-define-pwm_freq-1000-frecuencia-de-1-khz-define-pwm_res-8-resolucion-de-8-bits-valores-0-a-255-void-setup-configurar-pines-de-salida-pinmodein1-output-pinmodein2-output-configurar-canal-pwm-ledcsetuppwm_channel-pwm_freq-pwm_res-asociar-el-pin-fisico-al-canal-pwm-ledcattachpinpwm_pin-pwm_channel-void-loop-giro-hacia-adelante-digitalwritein1-low-digitalwritein2-high-aumentar-gradualmente-la-velocidad-for-int-i-0-i-255-i-ledcwritepwm_channel-i-delay10-aumento-progresivo-mantener-velocidad-maxima-delay1000-disminuir-gradualmente-la-velocidad-for-int-i-255-i-0-i-ledcwritepwm_channel-i-delay10-disminucion-progresiva-detener-el-motor-digitalwritein1-low-digitalwritein2-low-delay1000","title":"<pre><code>#define IN1 27\n#define IN2 14\n#define PWM_PIN 12\n\n// Configuraci\u00f3n del canal PWM\n#define PWM_CHANNEL 0\n#define PWM_FREQ 1000   // Frecuencia de 1 kHz\n#define PWM_RES 8       // Resoluci\u00f3n de 8 bits (valores 0 a 255)\n\nvoid setup() {\n  /* Configurar pines de salida */\n  pinMode(IN1, OUTPUT);\n  pinMode(IN2, OUTPUT);\n\n  /* Configurar canal PWM */\n  ledcSetup(PWM_CHANNEL, PWM_FREQ, PWM_RES);\n\n  /* Asociar el pin f\u00edsico al canal PWM */\n  ledcAttachPin(PWM_PIN, PWM_CHANNEL);\n}\n\nvoid loop() {\n  /* GIRO HACIA ADELANTE */\n  digitalWrite(IN1, LOW);\n  digitalWrite(IN2, HIGH);\n\n  /* Aumentar gradualmente la velocidad */\n  for (int i = 0; i &lt;= 255; i++) {\n    ledcWrite(PWM_CHANNEL, i);\n    delay(10);  // Aumento progresivo\n  }\n\n  /* Mantener velocidad m\u00e1xima */\n  delay(1000);\n\n  /* Disminuir gradualmente la velocidad */\n  for (int i = 255; i &gt;= 0; i--) {\n    ledcWrite(PWM_CHANNEL, i);\n    delay(10);  // Disminuci\u00f3n progresiva\n  }\n\n  /* Detener el motor */\n  digitalWrite(IN1, LOW);\n  digitalWrite(IN2, LOW);\n  delay(1000);\n}\n</code></pre>","text":""},{"location":"Control%20de%20motores%20DC%20con%20ESP32%20y%20Puente%20H/#videos_1","title":"videos","text":"Tu navegador no soporta la reproducci\u00f3n de video."},{"location":"Creear%20una%20p%C3%A1gina%20web/","title":"Creear una p\u00e1gina web","text":""},{"location":"Creear%20una%20p%C3%A1gina%20web/#creacion-de-una-pagina-web-en-github-pages","title":"Creaci\u00f3n de una p\u00e1gina web en GitHub Pages","text":""},{"location":"Creear%20una%20p%C3%A1gina%20web/#1-resumen","title":"1) Resumen","text":"<p>Nombre del proyecto: Publicaci\u00f3n de p\u00e1gina web con GitHub Pages Equipo / Autor(es): Jos\u00e9 Ismael Guerrero Rom\u00e1n y Gerardo Esquivel De Luna Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica Fecha:   22/Ago/25 Descripci\u00f3n breve: En esta pr\u00e1ctica se cre\u00f3 y public\u00f3 una p\u00e1gina web est\u00e1tica utilizando GitHub Pages, una herramienta gratuita que permite alojar sitios web directamente desde un repositorio en GitHub. Se aprendi\u00f3 a crear el repositorio, subir archivos HTML y configurar la publicaci\u00f3n en l\u00ednea.</p>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#2-objetivos","title":"2) Objetivos","text":"<p>General: Publicar una p\u00e1gina web b\u00e1sica en Internet utilizando GitHub Pages.  </p> <p>Espec\u00edficos: - OE1: Crear un repositorio en GitHub con los archivos del sitio web. - OE2: Configurar el repositorio para habilitar GitHub Pages. - OE3: Comprobar el funcionamiento del sitio publicado desde un navegador.  </p>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye: - Creaci\u00f3n de una p\u00e1gina web est\u00e1tica (HTML, CSS y JS). - Publicaci\u00f3n gratuita mediante GitHub Pages. - Visualizaci\u00f3n de la p\u00e1gina desde cualquier navegador.  </p> <p>No incluye: - Sitios con bases de datos o backend (solo contenido est\u00e1tico). - Integraci\u00f3n de dominios personalizados. - Edici\u00f3n avanzada con frameworks o gestores de contenido.  </p>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#4-requisitos","title":"4) Requisitos","text":"<p>Software: - Navegador web actualizado. - Cuenta en GitHub. - (Opcional) Editor de c\u00f3digo como Visual Studio Code.  </p> <p>Hardware: - Computadora con conexi\u00f3n a Internet.  </p> <p>Conocimientos previos: - Conceptos b\u00e1sicos de HTML y estructura de carpetas. - Manejo b\u00e1sico de GitHub (crear repositorios y subir archivos).  </p>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#5-procedimiento-paso-a-paso","title":"5) Procedimiento paso a paso","text":""},{"location":"Creear%20una%20p%C3%A1gina%20web/#paso-1-crear-una-cuenta-en-github","title":"Paso 1: Crear una cuenta en GitHub","text":"<ol> <li>Ingresar a https://github.com.  </li> <li>Crear una cuenta nueva o iniciar sesi\u00f3n si ya se tiene una.  </li> </ol>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#paso-2-crear-un-nuevo-repositorio","title":"Paso 2: Crear un nuevo repositorio","text":"<ol> <li>Desde el perfil, hacer clic en el bot\u00f3n \u201cNew repository\u201d.  </li> <li>Asignar un nombre al repositorio, por ejemplo:  </li> <li>Marcar la opci\u00f3n \u201cPublic\u201d y, si se desea, a\u00f1adir un archivo README.md.  </li> <li>Presionar \u201cCreate repository\u201d.  </li> </ol>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#paso-3-subir-los-archivos-de-la-pagina","title":"Paso 3: Subir los archivos de la p\u00e1gina","text":"<ol> <li>Dentro del nuevo repositorio, hacer clic en \u201cAdd file\u201d \u2192 \u201cUpload files\u201d.  </li> <li>Seleccionar los archivos del sitio web, por ejemplo:</li> <li><code>index.html</code> </li> <li><code>style.css</code> </li> <li><code>script.js</code></li> <li>Hacer clic en \u201cCommit changes\u201d para guardar los archivos.  </li> </ol>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#paso-4-habilitar-github-pages","title":"Paso 4: Habilitar GitHub Pages","text":"<ol> <li>Entrar a la pesta\u00f1a \u201cSettings\u201d del repositorio.  </li> <li>Desplazarse hacia abajo hasta la secci\u00f3n \u201cPages\u201d.  </li> <li>En \u201cSource\u201d, seleccionar la rama <code>main</code> y la carpeta <code>/ (root)</code>.  </li> <li>Presionar \u201cSave\u201d.  </li> </ol>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#paso-5-obtener-la-url-del-sitio","title":"Paso 5: Obtener la URL del sitio","text":"<ol> <li>GitHub generar\u00e1 un enlace con el formato:</li> <li>Esperar unos minutos a que se procese la publicaci\u00f3n.  </li> <li>Abrir el enlace en un navegador para visualizar la p\u00e1gina en l\u00ednea.  </li> </ol>"},{"location":"Creear%20una%20p%C3%A1gina%20web/#6-codigo-de-ejemplo-indexhtml","title":"6) C\u00f3digo de ejemplo (index.html)","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n&lt;meta charset=\"UTF-8\"&gt;\n&lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n&lt;title&gt;Mi Primera P\u00e1gina con GitHub Pages&lt;/title&gt;\n&lt;style&gt;\n body {\n   font-family: Arial, sans-serif;\n   background-color: #f0f2f5;\n   text-align: center;\n   margin-top: 100px;\n }\n h1 {\n   color: #005bbb;\n }\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;\u00a1Hola Mundo!&lt;/h1&gt;\n&lt;p&gt;Esta es mi primera p\u00e1gina web publicada en GitHub Pages.&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"Equipo%20de%20trabajo/","title":"Equipo de Trabajo.","text":"<ul> <li>Con\u00f3cenos, equipo de trabajo en Introducci\u00f3n a la Mecatr\u00f3nica.</li> </ul>"},{"location":"Equipo%20de%20trabajo/#jose-ismael-guerrero-roman","title":"Jos\u00e9 Ismael Guerrero Rom\u00e1n.","text":"<ul> <li>Carrera: Ing Mecatr\u00f3nica</li> <li>Cosas que me gustan hacer: Me gusta jugar videojuegos, escuchar m\u00fasica y estar informado de la tecnolog\u00eda y de los avances que logramos con ella y finalmente, otro de mis gustos es la f\u00f3rmula 1.</li> <li>Cosas de las que estoy orgulloso: Estoy Orgulloso, de como he crecido como persona a lo largo del tiempo y de como a pesar de mis errores y aciertos en la vida he podido, levantarme y aprender algo aunque sea m\u00ednimo, de las personas que me rodean y como en ocasiones he podido llegar a influir positivamente en ellos, tanto como amigos y familia, de igual manera estoy orgulloso, de haber podido mantener una buena trayectoria acad\u00e9mica a lo largo de mis estudios y de poder seguir estudiando en esta etapa de mi vida.</li> <li>Edad: 18</li> <li>Cumplea\u00f1os: 23 Julio</li> <li>Contacto: 203563@iberopuebla.mx</li> </ul>"},{"location":"Equipo%20de%20trabajo/#gerardo-esquivel-de-luna","title":"Gerardo Esquivel De Luna","text":"<ul> <li>Carrera: Ing Mecatr\u00f3nica</li> <li>Cosas que me gustan hacer: videojuegos, monta\u00f1ismo, ciclismo.</li> <li>Cosas de las que estoy orgulloso: De ser una persona perseverante, que no se rinde f\u00e1cilmente, por haber superado momentos dif\u00edciles y seguir avanzando y por ser alguien que ayuda a los dem\u00e1s cuando lo necesitan.</li> <li>Edad: 18</li> <li>Cumplea\u00f1os: 18 Julio</li> <li>Contacto: 204655@iberopuebla.mx</li> </ul>"},{"location":"LED%20intermitente%20con%20temporizador%20555/","title":"LED intermitente con temporizador 555 en modo astable","text":""},{"location":"LED%20intermitente%20con%20temporizador%20555/#1-resumen","title":"1) Resumen","text":"<p>Nombre del proyecto: LED intermitente con temporizador 555 en modo astable Equipo / Autor(es): Jos\u00e9 Ismael Guerrero Rom\u00e1n y Gerardo Esquivel De Luna Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica Fecha: 06/09/25 Descripci\u00f3n breve: Se dise\u00f1\u00f3 e implement\u00f3 un circuito astable con el temporizador 555 para generar el parpadeo de un LED en un intervalo regulable de 1 a 5 segundos, aplicando conceptos de electr\u00f3nica anal\u00f3gica.  </p>"},{"location":"LED%20intermitente%20con%20temporizador%20555/#2-objetivos","title":"2) Objetivos","text":"<p>General: Implementar un circuito con temporizador 555 en modo astable para controlar el parpadeo de un LED con un intervalo ajustable de tiempo.  </p> <p>Espec\u00edficos: - OE1: Calcular y seleccionar resistencias y capacitores adecuados para obtener un rango de parpadeo de 1 a 5 segundos. - OE2: Ensamblar el circuito en protoboard verificando las conexiones correctas. - OE3: Comprobar experimentalmente el funcionamiento del LED intermitente y documentar los resultados.  </p>"},{"location":"LED%20intermitente%20con%20temporizador%20555/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye: - Dise\u00f1o del circuito astable con 555. - C\u00e1lculo de tiempos de encendido/apagado del LED. - Montaje en protoboard y comprobaci\u00f3n de funcionamiento. - Evidencia en fotos y videos del resultado.  </p> <p>No incluye: - Dise\u00f1o de PCB definitivo. - Control de m\u00e1s de un LED o integraci\u00f3n con microcontroladores. - Alimentaciones distintas a 5 V o 9 V.  </p>"},{"location":"LED%20intermitente%20con%20temporizador%20555/#4-requisitos","title":"4) Requisitos","text":"<p>Software: - No se requiri\u00f3 software espec\u00edfico, solo calculadora electr\u00f3nica b\u00e1sica para el dimensionamiento de componentes.  </p> <p>Hardware: - CI NE555 (temporizador). - Resistencia R1 = 1 k\u03a9. - Resistencia R2 = 6.8 k\u03a9 + potenci\u00f3metro de 30 k\u03a9. - Capacitor electrol\u00edtico C = 100 \u00b5F. - Resistencia limitadora para LED (330 \u03a9 a 820 \u03a9 seg\u00fan Vcc). - LED rojo. - Protoboard y cables de conexi\u00f3n. - Fuente de poder de 5 V o 9 V.  </p> <p>Conocimientos previos: - Electr\u00f3nica b\u00e1sica: resistencias, capacitores, LED, temporizador 555. - C\u00e1lculo de tiempos en modo astable. - Manejo de protoboard y mult\u00edmetro.  </p>    Tu navegador no soporta la reproducci\u00f3n de video.  <p></p>"},{"location":"Presentacion/","title":"Acerca de mi","text":"<p>Mi nombre es Jos\u00e9 Ismael Guerrero Rom\u00e1n, tengo 18 a\u00f1os, estudio actualmente la carrera de Ing Mecatr\u00f3nica, eleg\u00ed esta carrera ya que desde peque\u00f1o, siempre me sent\u00ed atra\u00eddo por lo impresionante que puede ser un mecanismo cuando comprendes como funciona y descubres todos los dem\u00e1s usos que eso puede tener y de cierta forma la creatividad que debes tener para poder dar una soluci\u00f3n a un problema, desde peque\u00f1o comenc\u00e9 a aprender sobre el funcionamiento de algunos robots de juguete y durante la preparatoria ampec\u00e9 a aprender a programar en python, lo cual me pareci\u00f3 a\u00fan m\u00e1s fascinante, el como a partir de codigos e instrucciones, puedes lograr que la computadora endienta y ejecute muchas acciones peque\u00f1as para poder lograr algo enorme.</p>"},{"location":"Presentacion/#mis-gustos","title":"Mis gustos","text":"<p>Algunos de mis gustos o hobbies son: La musica, suelo escuchar de todo pero ultimamente, me he enfocado en oir m\u00e1s un poco de tecno y house tranquilo,me gusta ver la f\u00f3rmula uno y la ingenieria y el trabajo o proceso que existe detras de poder crear un auto casi tan perfecto que pueda tomar una curva a mas de 250 km/h y finalmente otro de mis gustos es la tecnolog\u00eda, estar al pendiente de los nuevos avances que han tenido y como al juntar esa tecnolog\u00eda con cosas cotidianas de nuestra vida, podemos hacerla m\u00e1s facil y al mismo tiempo podemos alcanzar una mayor eficiencia en nuestras vidas.</p>"},{"location":"Presentacion/#mi-yo-futuro","title":"Mi yo futuro","text":"<p>En diez a\u00f1os me gustar\u00eda verme como alguien que ya ha alcanzado el \u00e9xito academico, quien ha aprendido de personas y de los propios errores cometidos en esta vida y que ha sabido orientar y enfocar todo lo que sabe en busqueda de poder aportar algo nuevo y bueno a la sociedad, en mi caso mediante mi carrera, me gustaria poder trabajar en sistemas de inteligencia que busque ayudar a la poblaci\u00f3n, me veo en un trabajo estable y que disfruto hacer, trabajando en algo que me apasione realmente.</p>"},{"location":"control%20de%20led%20con%20ESP32/","title":"Control de LED con ESP32 (bot\u00f3n, Bluetooth e intervalos)","text":""},{"location":"control%20de%20led%20con%20ESP32/#1-resumen","title":"1) Resumen","text":"<p>Nombre del proyecto: Control de LED con ESP32 Equipo / Autor(es): Jos\u00e9 Ismael Guerrero Rom\u00e1n y Gerardo Esquivel De Luna Curso / Asignatura: Introducci\u00f3n a la Mecatr\u00f3nica Fecha: 19/09/25 Descripci\u00f3n breve: Se program\u00f3 un microcontrolador ESP32 para controlar un LED en tres casos distintos: mediante un bot\u00f3n f\u00edsico, a trav\u00e9s de comandos enviados por Bluetooth y con parpadeo autom\u00e1tico en intervalos de tiempo definidos.  </p>"},{"location":"control%20de%20led%20con%20ESP32/#2-objetivos","title":"2) Objetivos","text":"<p>General: Explorar diferentes formas de control de un LED con ESP32 aplicando entradas f\u00edsicas, comunicaci\u00f3n inal\u00e1mbrica y programaci\u00f3n de temporizaci\u00f3n.  </p> <p>Espec\u00edficos: - OE1: Programar el ESP32 para que un bot\u00f3n controle el encendido y apagado inmediato del LED. - OE2: Configurar la comunicaci\u00f3n Bluetooth del ESP32 para que el LED responda a comandos enviados desde la terminal (<code>\"on\"</code> y <code>\"off\"</code>). - OE3: Implementar un programa que haga parpadear el LED en intervalos de tiempo definidos. - OE4: Documentar con fotograf\u00edas y videos el c\u00f3digo y el funcionamiento de cada caso.  </p>"},{"location":"control%20de%20led%20con%20ESP32/#3-alcance-y-exclusiones","title":"3) Alcance y Exclusiones","text":"<p>Incluye: - Programaci\u00f3n del ESP32 en Arduino IDE (o entorno equivalente). - Caso 1: Control mediante bot\u00f3n f\u00edsico. - Caso 2: Control mediante Bluetooth con comandos <code>\"on\"</code> y <code>\"off\"</code>. - Caso 3: Parpadeo autom\u00e1tico del LED en intervalos. - Evidencias en fotos del c\u00f3digo y videos del funcionamiento.  </p> <p>No incluye: - Control de m\u00faltiples LEDs o actuadores. - Desarrollo de aplicaciones m\u00f3viles personalizadas. - Integraci\u00f3n con plataformas IoT externas.  </p>"},{"location":"control%20de%20led%20con%20ESP32/#4-requisitos","title":"4) Requisitos","text":"<p>Software: - Arduino IDE con soporte para ESP32. - Librer\u00edas necesarias para comunicaci\u00f3n Bluetooth. - Monitor serie o aplicaci\u00f3n de terminal Bluetooth.  </p> <p>Hardware: - ESP32. - LED + resistencia limitadora (330 \u03a9 a 820 \u03a9). - Pulsador (bot\u00f3n). - Protoboard y cables de conexi\u00f3n. - Fuente de alimentaci\u00f3n USB (5 V).  </p> <p>Conocimientos previos: - Programaci\u00f3n b\u00e1sica en Arduino/ESP32. - Manejo de entradas digitales (lectura de botones). - Control de salidas digitales (encendido y apagado de LED). - Conceptos de comunicaci\u00f3n b\u00e1sica v\u00eda Bluetooth. - Uso de funciones de temporizaci\u00f3n (<code>delay</code>, <code>millis</code>, etc.) para parpadeo en intervalos.</p>"},{"location":"control%20de%20led%20con%20ESP32/#programas-esp32-control-de-led","title":"Programas ESP32 - Control de LED","text":"<p>Este repositorio contiene tres ejemplos b\u00e1sicos para controlar un LED con un ESP32: 1. Encender y apagar con un bot\u00f3n f\u00edsico. 2. Encender y apagar mediante comandos enviados por Bluetooth. 3. Hacer parpadear el LED en intervalos de 2 segundos.  </p>"},{"location":"control%20de%20led%20con%20ESP32/#1-control-con-boton","title":"1. Control con Bot\u00f3n","text":"<pre><code>const int led = 33;\nconst int btn = 27;\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(led, OUTPUT);\n  pinMode(btn, INPUT);\n}\n\nvoid loop() {\n  int estado = digitalRead(btn);\n  if (estado == 1) {\n    digitalWrite(led, 1);  // LED encendido mientras el bot\u00f3n est\u00e9 presionado\n  } else {\n    digitalWrite(led, 0);  // LED apagado cuando no se presiona\n  }\n}\n</code></pre>"},{"location":"control%20de%20led%20con%20ESP32/#2-control-con-bluetooth","title":"2. Control con Bluetooth","text":"<pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\n\nconst int led = 33;\n\nvoid setup() {\n  Serial.begin(115200);\n  SerialBT.begin(\"ESP32-de-los-PAPITOS\"); // Nombre del dispositivo Bluetooth\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  if (SerialBT.available()) {\n    String mensaje = SerialBT.readString();\n    Serial.println(\"Recibido: \" + mensaje);\n\n    if (mensaje == \"on\") {\n      digitalWrite(led, 1);   // LED encendido por comando\n    } \n    else if (mensaje == \"off\") {\n      digitalWrite(led, 0);   // LED apagado por comando\n    }\n  }\n  delay(1000);\n}\n</code></pre>"},{"location":"control%20de%20led%20con%20ESP32/#3-intervalos-de-parpadeo","title":"3. Intervalos de Parpadeo","text":"<pre><code>const int led = 33;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(led, HIGH);  // LED encendido\n  delay(2000);              // Espera 2 segundos\n  digitalWrite(led, LOW);   // LED apagado\n  delay(2000);              // Espera 2 segundos\n}\n</code></pre>"},{"location":"control%20de%20led%20con%20ESP32/#videos","title":"Videos","text":""},{"location":"control%20de%20led%20con%20ESP32/#control-solo-por-esp-32","title":"Control, solo por ESP 32","text":"Tu navegador no soporta la reproducci\u00f3n de video."},{"location":"control%20de%20led%20con%20ESP32/#control-por-bluetooth","title":"Control por bluetooth","text":"Tu navegador no soporta la reproducci\u00f3n de video."},{"location":"control%20de%20led%20con%20ESP32/#control-por-boton","title":"Control por bot\u00f3n","text":"Tu navegador no soporta la reproducci\u00f3n de video."}]}